# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

     # Steps represent a sequence of tasks that will be executed as part of the job
    steps:     
      - name: Git setup
        uses: actions/checkout@v2
      
      - name: Dotnet run
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0' # SDK Version to use; x will use the latest version of the 3.1 channel
      
      - name: Publish prod
        run: dotnet restore; dotnet publish -r win10-x64 --configuration "Release" --self-contained "true" -o ./site;
        env:
          CI: "" # To ignore warning messages, otherwise the build will fail

      - name: Generate deployment package 
        run: cd site; zip ../site.zip *; cd ..; zip ranking-app.zip site.zip aws-windows-deployment-manifest.json

      - name: Archive zip folder as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ranking-app
          path: ranking-app.zip

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ranking-app # ELB application name
          environment_name: ranking-app-prod # ELB environment
          version_label: ${{ github.run_id }}
          region: eu-west-3
          deployment_package: ranking-app.zip